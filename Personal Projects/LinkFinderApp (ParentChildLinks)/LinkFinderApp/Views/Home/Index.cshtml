@model LinkFinderApp.Models.LinkFinderVM

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-md-2 control-label" for="m">URL:</label>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.URL, new { @class = "form-control", type = "url" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="NumOfLevels"># of Levels:</label>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.NumOfLevels, new { @class = "form-control", type = "number", min = "1", max = "5" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="NumOfLinks"># of Links:</label>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.NumOfLinks, new { @class = "form-control", type = "number", min = "1", max = "20" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="StartAtLinkNum">Start at link #:</label>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.StartAtLinkNum, new { @class = "form-control", type = "number", min = "1", max = "50" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="AllLinksFromFirstPage">Do all links from first page:</label>
                <div class="col-md-10">
                    @Html.CheckBoxFor(m => m.AllLinksFromFirstPage, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="KeepLinkStyles">Keep Link Styles:</label>
                <div class="col-md-10">
                    @Html.CheckBoxFor(m => m.KeepLinkStyles, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" for="NoDuplicateSites">No Duplicate Sites:</label>
                <div class="col-md-10">
                    @Html.CheckBoxFor(m => m.NoDuplicateSites, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-primary" value="Get Links" />
                </div>
            </div>
        </div>
    </div>
}

@if (Model.ErrorMessages.Count != 0)
{
    <h2>Error Messages:</h2>
    foreach (var message in Model.ErrorMessages)
    {
        <p style="color:red">@message</p>
    }
}

<h2>Links from "@Model.URL":</h2>
<p>Number of Links: @Model.LinksTotal</p>

@foreach (var link in Model.Links)
{
    if (Model.KeepLinkStyles)
    {
        <h4>Link #: @Model.Links.FindIndex(m => m.Equals(link))</h4>
        <h2>@Html.Raw(link.LinkContent)</h2>
        if (link.ChildLinks != null)
        {
            foreach (var child in link.ChildLinks)
            {
                <h3 style="color:green">@Html.Raw(child.LinkContent)</h3>
                if (child.ChildLinks != null)
                {
                    foreach (var grandchild in child.ChildLinks)
                    {
                        <h4 style="color:red">@Html.Raw(grandchild.LinkContent)</h4>
                        if (grandchild.ChildLinks != null)
                        {
                            foreach (var greatGrandchild in grandchild.ChildLinks)
                            {
                                <h5 style="color:indigo">@Html.Raw(greatGrandchild.LinkContent)</h5>
                                if (greatGrandchild.ChildLinks != null)
                                {
                                    foreach (var greatGreatGrandchild in greatGrandchild.ChildLinks)
                                    {
                                        <h6 style="color:lightcoral">@Html.Raw(greatGreatGrandchild.LinkContent)</h6>
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    else
    {
        <h4>Link #: @Model.Links.FindIndex(m => m.Equals(link))</h4>
        <h2><a href="@link.LinkAddress" target="_blank">@link.LinkAddress</a></h2>
        if (link.ChildLinks != null)
        {
            foreach (var child in link.ChildLinks)
            {
                <h3><a href="@child.LinkAddress" style="color:green" target="_blank">@child.LinkAddress</a></h3>
                if (child.ChildLinks != null)
                {
                    foreach (var grandchild in child.ChildLinks)
                    {
                        <h4><a href="@grandchild.LinkAddress" style="color:red" target="_blank">@grandchild.LinkAddress</a></h4>
                        if (grandchild.ChildLinks != null)
                        {
                            foreach (var greatGrandchild in grandchild.ChildLinks)
                            {
                                <h5><a href="@greatGrandchild.LinkAddress" style="color:indigo" target="_blank">@greatGrandchild.LinkAddress</a></h5>
                                if (greatGrandchild.ChildLinks != null)
                                {
                                    foreach (var greatGreatGrandchild in greatGrandchild.ChildLinks)
                                    {
                                        <h6><a href="@greatGreatGrandchild.LinkAddress" style="color:lightcoral" target="_blank">@greatGreatGrandchild.LinkAddress</a></h6>
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

}

<h1>Website content:</h1>
<p>@Model.Content</p>

@section Scripts
{
    <script>
        $(document).ready(function () {
            if ($('#NumOfLevels').val() < 2) {
                $('#AllLinksFromFirstPage').prop("disabled", true);
                $('#AllLinksFromFirstPage').prop("checked", false);
            }
            else {
                $('#AllLinksFromFirstPage').prop("disabled", false);
            }
            $('#NumOfLevels').change(function (e) {
                if (this.value < 2) {
                    $('#AllLinksFromFirstPage').prop("disabled", true);
                    $('#AllLinksFromFirstPage').prop("checked", false);
                }
                else {
                    $('#AllLinksFromFirstPage').prop("disabled", false);
                }
            })
        })
    </script>

}